{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAEhCC,EAAiB,KACjBC,EAAQ,KACRC,EAAO,KACPC,EAAS,GACTC,EAAe,KAmCnB,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAS,SAACC,EAASC,GAE5BC,YAAY,WACYC,KAAKC,SAAW,GAGpCJ,EAAQ,CAACH,SAAYA,EAAUQ,MAASP,IAGxCG,EAAO,CAACJ,SAAYA,EAAUQ,MAASP,G,GAExCA,E,IA7CTV,EAAKkB,iBAAiB,SAGtB,SAA0BC,GACxBb,EAASa,EAAIC,cAAcC,OAAOC,MAClClB,EAAQmB,OAAOJ,EAAIC,cAAcI,SAASP,MAAMK,OAChDjB,EAAOkB,OAAOJ,EAAIC,cAAcK,KAAKH,M,IALvCtB,EAAKkB,iBAAiB,UAQtB,SAA2BC,GACzBA,EAAIO,iBAEJvB,EAAiB,EACjBI,EAAeH,EAEf,IAAK,IAAIuB,EAAI,EAAGA,EAAIrB,EAAQqB,GAAK,EAE3BA,GAAK,IACPpB,GAAgBF,GAGlBG,EALAL,GAAkB,EAKYI,GAC7BqB,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUqB,EAAKD,EAALZ,MACjBc,QAAQC,IAAI,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANH,EAAM,OAC1DhC,EAAAoC,OAAOC,QAAQ,uBAAwCF,OAAfxB,EAAS,QAAYwB,OAANH,EAAM,M,IAE9DM,OAAM,SAAAP,G,IAAGpB,EAAQoB,EAARpB,SAAU4B,EAAKR,EAALZ,MAClBc,QAAQC,IAAI,sBAAuCC,OAAfxB,EAAS,QAAYwB,OAANI,EAAM,OACzDvC,EAAAoC,OAAOI,QAAQ,sBAAqCL,OAAfxB,EAAS,QAAYwB,OAANI,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["\"use strict\";\nimport { Notify } from '../../node_modules/notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nlet promiseCounter = null;\nlet delay = null;\nlet step = null;\nlet amount = \"\";\nlet promiseDelay = null;\n\nform.addEventListener('input', handleFormInput);\nform.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormInput (evt) {\n  amount = evt.currentTarget.amount.value;\n  delay = Number(evt.currentTarget.elements.delay.value);\n  step = Number(evt.currentTarget.step.value);\n}\n\nfunction handleFormSubmit (evt) {\n  evt.preventDefault();\n\n  promiseCounter = 0;\n  promiseDelay = delay;\n\n  for (let i = 0; i < amount; i += 1) {\n    promiseCounter += 1;\n    if (i >= 1) {\n      promiseDelay += step;\n    }\n\n    createPromise(promiseCounter, promiseDelay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n}\n\nfunction createPromise(position, delay) {\n    return new Promise ((resolve, reject) => {\n\n      setTimeout (()=> {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {  //> 0.3;\n          // Fulfill\n          resolve({'position': position, 'delay': delay});\n        } else {\n          // Reject\n          reject({'position': position, 'delay': delay});\n        }   \n      }, delay);\n\n    });  \n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$promiseCounter","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$promiseDelay","$ce04d3a99e08e73b$var$createPromise","position","delay3","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","evt","currentTarget","amount","value","Number","elements","step","preventDefault","i","then","param","delay1","console","log","concat","Notify","success","catch","delay2","failure"],"version":3,"file":"03-promises.5856213c.js.map"}