{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,SAEpC,IAAIC,EAAiB,KACjBC,EAAQ,KACRC,EAAO,KACPC,EAAS,GACTC,EAAe,KAmCnB,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAS,CAACC,EAASC,KAE5BC,YAAY,KACYC,KAAKC,SAAW,GAGpCJ,EAAQ,CAACH,SAAYA,EAAUQ,MAASP,IAGxCG,EAAO,CAACJ,SAAYA,EAAUQ,MAASP,GAAO,GAE/CA,EAAM,G,CA7CfV,EAAKkB,iBAAiB,SAGtB,SAA0BC,GACxBb,EAASa,EAAIC,cAAcC,OAAOC,MAClClB,EAAQmB,OAAOJ,EAAIC,cAAcI,SAASP,MAAMK,OAChDjB,EAAOkB,OAAOJ,EAAIC,cAAcK,KAAKH,M,IALvCtB,EAAKkB,iBAAiB,UAQtB,SAA2BC,GACzBA,EAAIO,iBAEJvB,EAAiB,EACjBI,EAAeH,EAEf,IAAK,IAAIuB,EAAI,EAAGA,EAAIrB,EAAQqB,GAAK,EAC/BxB,GAAkB,EACdwB,GAAK,IACPpB,GAAgBF,GAGlBG,EAAcL,EAAgBI,GAC7BqB,MAAK,EAACnB,SAAEA,EAAUQ,MAAAY,MACjBC,QAAQC,IAAI,uBAAqBtB,QAAiBoB,OAClD/B,EAAAkC,OAAOC,QAAQ,uBAAqBxB,QAAiBoB,MAAU,IAEhEK,OAAM,EAACzB,SAAEA,EAAUQ,MAAAkB,MAClBL,QAAQC,IAAI,sBAAoBtB,QAAiB0B,OACjDrC,EAAAkC,OAAOI,QAAQ,sBAAoB3B,QAAe0B,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["\"use strict\";\nimport { Notify } from '../../node_modules/notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nlet promiseCounter = null;\nlet delay = null;\nlet step = null;\nlet amount = \"\";\nlet promiseDelay = null;\n\nform.addEventListener('input', handleFormInput);\nform.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormInput (evt) {\n  amount = evt.currentTarget.amount.value;\n  delay = Number(evt.currentTarget.elements.delay.value);\n  step = Number(evt.currentTarget.step.value);\n}\n\nfunction handleFormSubmit (evt) {\n  evt.preventDefault();\n\n  promiseCounter = 0;\n  promiseDelay = delay;\n\n  for (let i = 0; i < amount; i += 1) {\n    promiseCounter += 1;\n    if (i >= 1) {\n      promiseDelay += step;\n    }\n\n    createPromise(promiseCounter, promiseDelay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n}\n\nfunction createPromise(position, delay) {\n    return new Promise ((resolve, reject) => {\n\n      setTimeout (()=> {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {  //> 0.3;\n          // Fulfill\n          resolve({'position': position, 'delay': delay});\n        } else {\n          // Reject\n          reject({'position': position, 'delay': delay});\n        }   \n      }, delay);\n\n    });  \n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$promiseCounter","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$promiseDelay","$47d4ff9957288465$var$createPromise","position","delay3","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","evt","currentTarget","amount","value","Number","elements","step","preventDefault","i","then","delay1","console","log","Notify","success","catch","delay2","failure"],"version":3,"file":"03-promises.72662a59.js.map"}